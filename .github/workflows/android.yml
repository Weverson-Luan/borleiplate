name: Android CI

on:
  push:
    branches:
      - main # ou a branch que você deseja monitorar
  pull_request:
    branches:
      - main # ou a branch que você deseja monitorar

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the code #  Faz o checkout do código do seu repositório.
      uses: actions/checkout@v3
    
    - name: Set up Node.js #  Configura a versão do Node.js necessária.
      uses: actions/setup-node@v3
      with:
        node-version: '20.12.1' # ou a versão do Node.js que você usa
    
    - name: Install Yarn # Instala o Yarn globalmente.
      run: npm install -g yarn
    
    - name: Install dependencies
      run: yarn install
    
    - name: Cache Gradle # Usa caching para acelerar a construção do Gradle.
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Build Android App # Executa o comando para construir o APK do Android. Dependendo do que você precisa, pode ajustar para assembleDebug ou assembleRelease.
      run: |
        cd android
        ./gradlew assembleRelease # ou ./gradlew assembleDebug para debug
    
    - name: Upload APK # Faz o upload do APK gerado como um artefato do GitHub Actions.
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: android/app/build/outputs/apk/release/app-release.apk # ajuste se necessário
